{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\nconst toUrlSearchParams = require('../lib/to-url-search-params');\nconst abortSignal = require('../lib/abort-signal');\nconst multipartRequest = require('../lib/multipart-request');\nconst {\n  AbortController\n} = require('native-abort-controller');\nconst {\n  CID\n} = require('multiformats/cid');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {DAGAPI[\"import\"]}\n   */\n  async function* dagImport(source, options = {}) {\n    const controller = new AbortController();\n    const signal = abortSignal(controller.signal, options.signal);\n    const {\n      headers,\n      body\n    } = await multipartRequest(source, controller, options.headers);\n    const res = await api.post('dag/import', {\n      signal,\n      headers,\n      body,\n      searchParams: toUrlSearchParams({\n        'pin-roots': options.pinRoots\n      })\n    });\n    for await (const {\n      Root\n    } of res.ndjson()) {\n      if (Root !== undefined) {\n        const {\n          Cid: {\n            '/': Cid\n          },\n          PinErrorMsg\n        } = Root;\n        yield {\n          root: {\n            cid: CID.parse(Cid),\n            pinErrorMsg: PinErrorMsg\n          }\n        };\n      }\n    }\n  }\n  return dagImport;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","abortSignal","multipartRequest","AbortController","CID","module","exports","api","dagImport","source","options","controller","signal","headers","body","res","post","searchParams","pinRoots","Root","ndjson","undefined","Cid","PinErrorMsg","root","cid","parse","pinErrorMsg"],"sources":["/home/ha/Downloads/programs/27-10/mb_NFT/mb-fe/node_modules/ipfs-http-client/src/dag/import.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst abortSignal = require('../lib/abort-signal')\nconst multipartRequest = require('../lib/multipart-request')\nconst { AbortController } = require('native-abort-controller')\nconst { CID } = require('multiformats/cid')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {DAGAPI[\"import\"]}\n   */\n  async function * dagImport (source, options = {}) {\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n    const { headers, body } = await multipartRequest(source, controller, options.headers)\n\n    const res = await api.post('dag/import', {\n      signal,\n      headers,\n      body,\n      searchParams: toUrlSearchParams({ 'pin-roots': options.pinRoots })\n    })\n\n    for await (const { Root } of res.ndjson()) {\n      if (Root !== undefined) {\n        const { Cid: { '/': Cid }, PinErrorMsg } = Root\n\n        yield {\n          root: {\n            cid: CID.parse(Cid),\n            pinErrorMsg: PinErrorMsg\n          }\n        }\n      }\n    }\n  }\n\n  return dagImport\n})\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAA6B,CAAC;AAChE,MAAME,WAAW,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAClD,MAAMG,gBAAgB,GAAGH,OAAO,CAAC,0BAA0B,CAAC;AAC5D,MAAM;EAAEI;AAAgB,CAAC,GAAGJ,OAAO,CAAC,yBAAyB,CAAC;AAC9D,MAAM;EAAEK;AAAI,CAAC,GAAGL,OAAO,CAAC,kBAAkB,CAAC;;AAE3C;AACA;AACA;AACA;;AAEAM,MAAM,CAACC,OAAO,GAAGR,SAAS,CAACS,GAAG,IAAI;EAChC;AACF;AACA;EACE,gBAAiBC,SAASA,CAAEC,MAAM,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAChD,MAAMC,UAAU,GAAG,IAAIR,eAAe,CAAC,CAAC;IACxC,MAAMS,MAAM,GAAGX,WAAW,CAACU,UAAU,CAACC,MAAM,EAAEF,OAAO,CAACE,MAAM,CAAC;IAC7D,MAAM;MAAEC,OAAO;MAAEC;IAAK,CAAC,GAAG,MAAMZ,gBAAgB,CAACO,MAAM,EAAEE,UAAU,EAAED,OAAO,CAACG,OAAO,CAAC;IAErF,MAAME,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,YAAY,EAAE;MACvCJ,MAAM;MACNC,OAAO;MACPC,IAAI;MACJG,YAAY,EAAEjB,iBAAiB,CAAC;QAAE,WAAW,EAAEU,OAAO,CAACQ;MAAS,CAAC;IACnE,CAAC,CAAC;IAEF,WAAW,MAAM;MAAEC;IAAK,CAAC,IAAIJ,GAAG,CAACK,MAAM,CAAC,CAAC,EAAE;MACzC,IAAID,IAAI,KAAKE,SAAS,EAAE;QACtB,MAAM;UAAEC,GAAG,EAAE;YAAE,GAAG,EAAEA;UAAI,CAAC;UAAEC;QAAY,CAAC,GAAGJ,IAAI;QAE/C,MAAM;UACJK,IAAI,EAAE;YACJC,GAAG,EAAErB,GAAG,CAACsB,KAAK,CAACJ,GAAG,CAAC;YACnBK,WAAW,EAAEJ;UACf;QACF,CAAC;MACH;IACF;EACF;EAEA,OAAOf,SAAS;AAClB,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}