{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\nconst toUrlSearchParams = require('../lib/to-url-search-params');\nconst {\n  Multiaddr\n} = require('multiaddr');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"clear\"]}\n   */\n  async function clear(options = {}) {\n    const res = await api.post('bootstrap/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        all: true\n      }),\n      headers: options.headers\n    });\n    const {\n      Peers\n    } = await res.json();\n    return {\n      Peers: Peers.map(( /** @type {string} */ma) => new Multiaddr(ma))\n    };\n  }\n  return clear;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","Multiaddr","module","exports","api","clear","options","res","post","signal","searchParams","all","headers","Peers","json","map","ma"],"sources":["/home/ha/Downloads/programs/27-10/mb_NFT/mb-fe/node_modules/ipfs-http-client/src/bootstrap/clear.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst { Multiaddr } = require('multiaddr')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"clear\"]}\n   */\n  async function clear (options = {}) {\n    const res = await api.post('bootstrap/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        all: true\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => new Multiaddr(ma)) }\n  }\n\n  return clear\n})\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAA6B,CAAC;AAChE,MAAM;EAAEE;AAAU,CAAC,GAAGF,OAAO,CAAC,WAAW,CAAC;;AAE1C;AACA;AACA;AACA;;AAEAG,MAAM,CAACC,OAAO,GAAGL,SAAS,CAACM,GAAG,IAAI;EAChC;AACF;AACA;EACE,eAAeC,KAAKA,CAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAClC,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,cAAc,EAAE;MACzCC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBC,YAAY,EAAEV,iBAAiB,CAAC;QAC9B,GAAGM,OAAO;QACVK,GAAG,EAAE;MACP,CAAC,CAAC;MACFC,OAAO,EAAEN,OAAO,CAACM;IACnB,CAAC,CAAC;IAEF,MAAM;MAAEC;IAAM,CAAC,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;IAElC,OAAO;MAAED,KAAK,EAAEA,KAAK,CAACE,GAAG,CAAC,EAAC,qBAAsBC,EAAE,KAAK,IAAIf,SAAS,CAACe,EAAE,CAAC;IAAE,CAAC;EAC9E;EAEA,OAAOX,KAAK;AACd,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}