{"ast":null,"code":"'use strict';\n\nconst Client = require('../../lib/core');\nconst toUrlSearchParams = require('../../lib/to-url-search-params');\n\n/**\n * @typedef {import('../../types').Options} Options\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').Credentials} Credentials\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinService} RemotePinService\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinServiceWithStat} RemotePinServiceWithStat\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n * @typedef {import('ipfs-core-types/src/pin/remote/service').Stat} Stat\n */\nclass Service {\n  /**\n   * @param {Options} options\n   */\n  constructor(options) {\n    this.client = new Client(options);\n  }\n\n  /**\n   * @param {URL} url\n   */\n  static encodeEndpoint(url) {\n    const href = String(url);\n    if (href === 'undefined') {\n      throw Error('endpoint is required');\n    }\n    // Workaround trailing `/` issue in go-ipfs\n    // @see https://github.com/ipfs/go-ipfs/issues/7826\n    return href[href.length - 1] === '/' ? href.slice(0, -1) : href;\n  }\n\n  /**\n   * @param {any} json\n   * @returns {RemotePinServiceWithStat}\n   */\n  static decodeRemoteService(json) {\n    return {\n      service: json.Service,\n      endpoint: new URL(json.ApiEndpoint),\n      ...(json.Stat && {\n        stat: Service.decodeStat(json.Stat)\n      })\n    };\n  }\n\n  /**\n   * @param {any} json\n   * @returns {import('ipfs-core-types/src/pin/remote/service').Stat}\n   */\n  static decodeStat(json) {\n    switch (json.Status) {\n      case 'valid':\n        {\n          const {\n            Pinning,\n            Pinned,\n            Queued,\n            Failed\n          } = json.PinCount;\n          return {\n            status: 'valid',\n            pinCount: {\n              queued: Queued,\n              pinning: Pinning,\n              pinned: Pinned,\n              failed: Failed\n            }\n          };\n        }\n      case 'invalid':\n        {\n          return {\n            status: 'invalid'\n          };\n        }\n      default:\n        {\n          return {\n            status: json.Status\n          };\n        }\n    }\n  }\n}\n\n/**\n * @type {RemotePiningServiceAPI[\"add\"]}\n */\nService.prototype.add = async function add(name, options) {\n  const {\n    endpoint,\n    key,\n    headers,\n    timeout,\n    signal\n  } = options;\n  await this.client.post('pin/remote/service/add', {\n    timeout,\n    signal,\n    searchParams: toUrlSearchParams({\n      arg: [name, Service.encodeEndpoint(endpoint), key]\n    }),\n    headers\n  });\n};\n\n/**\n * @type {RemotePiningServiceAPI[\"rm\"]}\n */\nService.prototype.rm = async function rm(name, options = {}) {\n  await this.client.post('pin/remote/service/rm', {\n    signal: options.signal,\n    headers: options.headers,\n    searchParams: toUrlSearchParams({\n      arg: name\n    })\n  });\n};\n\n/**\n * @type {RemotePiningServiceAPI[\"ls\"]}\n */\nService.prototype.ls = async function ls(options = {}) {\n  // @ts-ignore cannot derive option type from typedef\n  const {\n    stat,\n    headers,\n    timeout,\n    signal\n  } = options;\n  const response = await this.client.post('pin/remote/service/ls', {\n    timeout,\n    signal,\n    headers,\n    searchParams: stat === true ? toUrlSearchParams({\n      stat\n    }) : undefined\n  });\n\n  /** @type {{RemoteServices: Object[]}} */\n  const {\n    RemoteServices\n  } = await response.json();\n  return RemoteServices.map(Service.decodeRemoteService);\n};\nmodule.exports = Service;","map":{"version":3,"names":["Client","require","toUrlSearchParams","Service","constructor","options","client","encodeEndpoint","url","href","String","Error","length","slice","decodeRemoteService","json","service","endpoint","URL","ApiEndpoint","Stat","stat","decodeStat","Status","Pinning","Pinned","Queued","Failed","PinCount","status","pinCount","queued","pinning","pinned","failed","prototype","add","name","key","headers","timeout","signal","post","searchParams","arg","rm","ls","response","undefined","RemoteServices","map","module","exports"],"sources":["/home/ha/Downloads/programs/27-10/mb_NFT/mb-fe/node_modules/ipfs-http-client/src/pin/remote/service.js"],"sourcesContent":["'use strict'\n\nconst Client = require('../../lib/core')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\n\n/**\n * @typedef {import('../../types').Options} Options\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').Credentials} Credentials\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinService} RemotePinService\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinServiceWithStat} RemotePinServiceWithStat\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n * @typedef {import('ipfs-core-types/src/pin/remote/service').Stat} Stat\n */\nclass Service {\n  /**\n   * @param {Options} options\n   */\n  constructor (options) {\n    this.client = new Client(options)\n  }\n\n  /**\n   * @param {URL} url\n   */\n  static encodeEndpoint (url) {\n    const href = String(url)\n    if (href === 'undefined') {\n      throw Error('endpoint is required')\n    }\n    // Workaround trailing `/` issue in go-ipfs\n    // @see https://github.com/ipfs/go-ipfs/issues/7826\n    return href[href.length - 1] === '/' ? href.slice(0, -1) : href\n  }\n\n  /**\n   * @param {any} json\n   * @returns {RemotePinServiceWithStat}\n   */\n  static decodeRemoteService (json) {\n    return {\n      service: json.Service,\n      endpoint: new URL(json.ApiEndpoint),\n      ...(json.Stat && { stat: Service.decodeStat(json.Stat) })\n    }\n  }\n\n  /**\n   * @param {any} json\n   * @returns {import('ipfs-core-types/src/pin/remote/service').Stat}\n   */\n  static decodeStat (json) {\n    switch (json.Status) {\n      case 'valid': {\n        const { Pinning, Pinned, Queued, Failed } = json.PinCount\n        return {\n          status: 'valid',\n          pinCount: {\n            queued: Queued,\n            pinning: Pinning,\n            pinned: Pinned,\n            failed: Failed\n          }\n        }\n      }\n      case 'invalid': {\n        return { status: 'invalid' }\n      }\n      default: {\n        return { status: json.Status }\n      }\n    }\n  }\n}\n\n/**\n * @type {RemotePiningServiceAPI[\"add\"]}\n */\nService.prototype.add = async function add (name, options) {\n  const { endpoint, key, headers, timeout, signal } = options\n\n  await this.client.post('pin/remote/service/add', {\n    timeout,\n    signal,\n    searchParams: toUrlSearchParams({\n      arg: [name, Service.encodeEndpoint(endpoint), key]\n    }),\n    headers\n  })\n}\n\n/**\n * @type {RemotePiningServiceAPI[\"rm\"]}\n */\nService.prototype.rm = async function rm (name, options = {}) {\n  await this.client.post('pin/remote/service/rm', {\n    signal: options.signal,\n    headers: options.headers,\n    searchParams: toUrlSearchParams({\n      arg: name\n    })\n  })\n}\n\n/**\n * @type {RemotePiningServiceAPI[\"ls\"]}\n */\nService.prototype.ls = async function ls (options = {}) {\n  // @ts-ignore cannot derive option type from typedef\n  const { stat, headers, timeout, signal } = options\n\n  const response = await this.client.post('pin/remote/service/ls', {\n    timeout,\n    signal,\n    headers,\n    searchParams: stat === true ? toUrlSearchParams({ stat }) : undefined\n  })\n\n  /** @type {{RemoteServices: Object[]}} */\n  const { RemoteServices } = await response.json()\n\n  return RemoteServices.map(Service.decodeRemoteService)\n}\n\nmodule.exports = Service\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}