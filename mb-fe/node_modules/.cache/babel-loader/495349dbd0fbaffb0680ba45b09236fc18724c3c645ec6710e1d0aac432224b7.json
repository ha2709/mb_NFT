{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\nconst errCode = require('err-code');\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"info\"]}\n   */\n  const info = async (name, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');\n  };\n  return info;\n});","map":{"version":3,"names":["configure","require","errCode","module","exports","api","info","name","options","Error"],"sources":["/home/ha/Downloads/programs/27-10/mb_NFT/mb-fe/node_modules/ipfs-http-client/src/key/info.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst errCode = require('err-code')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"info\"]}\n   */\n  const info = async (name, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return info\n})\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAU,CAAC;;AAEnC;AACA;AACA;AACA;;AAEAE,MAAM,CAACC,OAAO,GAAGJ,SAAS,CAACK,GAAG,IAAI;EAChC;AACF;AACA;EACE,MAAMC,IAAI,GAAG,MAAAA,CAAOC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;IACzC,MAAMN,OAAO,CAAC,IAAIO,KAAK,CAAC,iBAAiB,CAAC,EAAE,qBAAqB,CAAC;EACpE,CAAC;EAED,OAAOH,IAAI;AACb,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}