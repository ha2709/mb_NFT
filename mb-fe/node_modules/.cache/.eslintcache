[{"/home/ha/Downloads/programs/27-10/mb_NFT/mb-fe/src/index.js":"1","/home/ha/Downloads/programs/27-10/mb_NFT/mb-fe/src/App.js":"2","/home/ha/Downloads/programs/27-10/mb_NFT/mb-fe/src/reportWebVitals.js":"3","/home/ha/Downloads/programs/27-10/mb_NFT/mb-fe/src/services/MetaMask.js":"4"},{"size":535,"mtime":1698375428934,"results":"5","hashOfConfig":"6"},{"size":4802,"mtime":1698389762217,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1698375428938,"results":"8","hashOfConfig":"6"},{"size":1821,"mtime":1698376271077,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1mvkezt",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"/home/ha/Downloads/programs/27-10/mb_NFT/mb-fe/src/index.js",[],[],["24"],"/home/ha/Downloads/programs/27-10/mb_NFT/mb-fe/src/App.js",["25","26"],[]," \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'; \nimport MetaMask from \"./services/MetaMask\"; \nimport { create } from 'ipfs-http-client'\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nconst projectId = process.env.REACT_APP_PROJECT_ID;\nconst projectSecret = process.env.REACT_APP_SECRET_KEY;\nconst urlIPFS = process.env.REACT_APP_URL_IPFS\n\naxios.defaults.baseURL = process.env.API_URL ?? 'http://localhost:8000/api/v1';\n\nconst auth = \"Basic \" + btoa(projectId + \":\" + projectSecret);\n// dedicated gateway\nconst client = create({\n    host: process.env.REACT_APP_UPLOAD_URL,\n    port: 5001,\n    protocol: \"https\",\n    headers: {\n        authorization: auth,\n    },\n});\nfunction App() {\n  const [fileUrl, setFileUrl ]= useState(null)\n  const [url, setUrl ]= useState(null)\n  const [hash, setHash ]= useState(null)\n  const [account, setAccount] = useState(null)\n  const [nric, setNric] = useState('');\n  const [formInput, updateFormInput] = useState({\n    price:'',\n    name:'',\n    description:''\n  })\n  async function onFileChange(e) {\n    const file = e.target.files[0]\n    try {\n       await client\n      .add(file, {\n          progress: (size) => {\n             \n              console.log(`received: ${size}`);\n          },\n      })\n      .then(async (response) => {\n          const { path } = response;\n\n          const url = urlIPFS+path\n          setFileUrl(url)\n          console.log(46, url)\n        \n      })\n       \n    } catch (error) {\n      console.log(error)\n    }\n  }\n\nconst postData = async () => {\n    try {\n      const response = await axios.post('/users', {\n        NRIC: nric,\n        wallet_address: account\n      });\n      setHash(response.data)\n      console.log('Response:', response.data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleNricChange = (e) => {\n    console.log(73, e.target.value)\n    setNric(e.target.value);\n  };\n\n  const handleNricBlur = () => {\n    console.log(77, nric)\n    if (nric) {\n      postData();\n    }\n  };\n  useEffect(() => {\n    (async () => {\n      try {\n        const metaMaskInstance = new MetaMask();\n        const result = await metaMaskInstance.initialize();\n        console.log('initialize MetaMask Class', result);\n        setAccount(result.currentAddress)\n      } catch (error) {\n        console.log('Error', error);\n      }\n    })();\n  }, []);\n \n\n  const handleMintNFT = async (e) => {\n    createUrl(e)\n  }\n  async function createUrl(e) {\n  // const handleMintNFT = async (e) => {\n    console.log(68)\n    e.preventDefault();\n    const {name, description, nric} = formInput\n    console.log(72, account, name, description, nric)\n    if(!name || !description|| !fileUrl || !nric) return \n    const data = JSON.stringify({\n      name, description, image: fileUrl\n    })\n    console.log(84, data, typeof data)\n    const jsonObject = JSON.parse(data);\n    console.log(75, jsonObject, typeof jsonObject);\n    try {\n      const added = await client.add(JSON.stringify(jsonObject));        \n          console.log(97, added);\n          const urlMetadata = urlIPFS+added.path;       \n          console.log(89, urlMetadata);  \n          setUrl(urlMetadata)\n    } catch (error) {\n        console.error(error);\n    }\n    console.log(\"Minting NFT...\");\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n       <form onSubmit={handleMintNFT}>\n          <div className=\"mb-3\">\n            <input className=\"form-control\" type=\"file\" onChange={e=>onFileChange(e)}/>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"form-label\">Name:</label>\n            <input type=\"text\" \n            \n              className=\"form-control\" id=\"name\" name=\"name\" \n              onChange={e => updateFormInput({ ...formInput, name: e.target.value })}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"description\" className=\"form-label\">Description:</label>\n            <textarea className=\"form-control\" id=\"description\" name=\"description\" \n              onChange={e => updateFormInput({ ...formInput, description: e.target.value })}\n              // onChange={e=>onNRICChange(e)}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"nric\" className=\"form-label\">NRIC:</label>\n            <input type=\"text\" className=\"form-control\"\n             id=\"nric\" name=\"nric\"  value={nric}\n               onChange={handleNricChange}\n               onBlur={handleNricBlur}\n               placeholder=\"Enter NRIC\"\n            />\n          </div>      \n\n          <button type='submit' className=\"btn btn-success\">\n            Mint NFT\n          </button>\n      </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/home/ha/Downloads/programs/27-10/mb_NFT/mb-fe/src/reportWebVitals.js",[],[],"/home/ha/Downloads/programs/27-10/mb_NFT/mb-fe/src/services/MetaMask.js",[],[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":26,"column":10,"nodeType":"31","messageId":"32","endLine":26,"endColumn":13},{"ruleId":"29","severity":1,"message":"33","line":27,"column":10,"nodeType":"31","messageId":"32","endLine":27,"endColumn":14},"no-new-object",["34"],"no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","'hash' is assigned a value but never used.","no-object-constructor"]